// Loops Demonstration

// Helper function for modulo operation (since % is not implemented)
function mod(a, b) {
    // Simple approach: keep subtracting b from a until a < b
    remainder = a
    while (remainder >= b) {
        remainder = remainder - b
    }
    return remainder
}

print("=== Flex Loops Demo ===")

print("1. For Loop - Counting up:")
for (i = 1; i <= 5; i++) {
    print("Count: {i}")
}

print("2. For Loop - Counting down:")
for (i = 5; i > 0; i--) {
    print("Countdown: {i}")
}

print("3. While Loop - Powers of 2:")
power = 1
count = 0
while (count < 5) {
    print("2^{count} = {power}")
    power = power * 2
    count = count + 1
}

print("4. Nested Loops - Multiplication Table:")
print("5x5 Multiplication Table:")
for (i = 1; i <= 5; i++) {
    row = ""
    for (j = 1; j <= 5; j++) {
        product = i * j
        if (j == 1) {
            row = str(product)
        } else {
            row = row + "  " + str(product)
        }
    }
    print(row)
}

print("5. Loop with Break Condition:")
print("Finding first number divisible by 7:")
for (i = 15; i <= 30; i++) {
    if (mod(i, 7) == 0) {
        print("Found: {i} is divisible by 7")
        break
    }
    print("Checking {i}... not divisible by 7")
}

print("Loops demonstration complete!") 